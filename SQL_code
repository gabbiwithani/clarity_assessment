CREATE TABLE demographics(
	geoid character(50),
	n_registered int,
	share_dem decimal,
	share_rep decimal,
	share_white decimal,
	share_afam decimal,
	share_female decimal,
	avg_hhincome decimal,
	avg_popdens decimal,
	avg_partyscore decimal,
	avg_collegescore decimal,
	avg_gunownscore decimal,
	avg_gvpscore decimal,
	avg_churchscore decimal,
	avg_marijuanascore decimal,
	avg_fiscalprogscore decimal,
	avg_choicescore decimal,
	avg_enviroscore decimal
);

-- import CSV files using GUI -- 

SELECT * FROM demographics; -- to confirm it worked --

CREATE TABLE results(
geoid char(50),
rcv_yes int,
rcv_no int,
mw_yes int,
mw_no int,
bg_yes int,
bg_no int);

-- import CSV file using GUI --

SELECT * FROM results; -- to confirm it worked --

CREATE TABLE projections(
geoid char(50),
proj_votes int,
proj_mw_yes int,
proj_bg_yes int,
proj_rcv_yes int);
 -- import CSV in through GUI --
 
 SELECT * FROM projections; -- confirm import successful --
 
 -- compare results with projections; convert to percentages, eliminate geoids with 0 votes --
 
 SELECT results.geoid, (100 * rcv_yes/(rcv_yes + rcv_no)) AS rcv_perc_round, 
									  (100 * proj_rcv_yes/proj_votes) AS proj_rcv_perc_round,
									  (100 * mw_yes/(mw_yes + mw_no)) AS mw_perc_round, 
									  (100 * proj_mw_yes/proj_votes) AS proj_mw_perc_round,
									  (100 * bg_yes/(bg_yes + bg_no)) AS bg_perc_round,
									  (100 * proj_bg_yes/proj_votes) AS proj_bg_perc_round
FROM results
INNER JOIN projections
ON results.geoid = projections.geoid
WHERE (rcv_yes + rcv_no) != 0
AND (mw_yes + mw_no) != 0
AND (bg_yes + bg_no) != 0;

-- pull dataset with variables I'm interested in and results both by number and by percentage --

CREATE TABLE clarity_data AS
(SELECT demographics.geoid, share_dem, share_rep, share_white, share_afam, share_female, avg_hhincome, avg_popdens, avg_partyscore,
avg_collegescore, avg_churchscore, avg_marijuanascore, avg_choicescore, avg_enviroscore, avg_gunownscore, avg_gvpscore, rcv_yes,
rcv_no, (100 * rcv_yes/(rcv_yes + rcv_no)) AS rcv_perc, mw_yes, mw_no, (100 * mw_yes/(mw_yes + mw_no)) AS mw_perc,
bg_yes, bg_no, (100 * bg_yes/(bg_yes + bg_no)) AS bg_perc
FROM demographics
INNER JOIN results
ON demographics.geoid = results.geoid		  
WHERE (rcv_yes + rcv_no) != 0 AND (mw_yes + mw_no) != 0 AND (bg_yes + bg_no != 0));
